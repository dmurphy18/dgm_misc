#!/usr/bin/bash

SCRIPT_VERSION=2015.05.20.01

## using bash for now to test, needs to be ksh eventuaklly for AIX

set -o functrace

## helper functions

_timestamp() {
    date "+%Y-%m-%d %H:%M:%S:"
}

_log() {
    echo "$1" | sed "s/^/$(_timestamp) /" >>"$log_file"
}

# Both echo and log
_display() {
    echo "$1"
    _log "$1"
}

_error() {
    msg="ERROR: $1"
    echo "$msg" 1>&2
    echo "$(_timestamp) $msg" >>"$log_file"
    echo "One or more errors found. See $log_file for details." 1>&2
    exit 1
}

_warning() {
    msg="WARNING: $1"
    echo "$msg" 1>&2
    echo "$(_timestamp) $msg" >>"$log_file"
}

# this find/grep will have to be modified for running on AIX
_get_list_of_sym_linked_files() {
    symlinkfilelist=$(find . -type l -print)
}


# AIX installp doesn't handle symlinks, so have to scripts to 
# create symlink'd files post install and removal of fileset

_gen_post_install_remove_scripts() {

## TODO - cannot have the files with your absolute directory paths
##          also need to ensure the sse_p* files are copied to  
##          mkinstallp build area

    echo "#!/usr/bin/ksh" > "${post_install_file}"
    chmod 755 "${post_install_file}"

    echo "#!/usr/bin/ksh" > "${uninstall_rm_file}"
    chmod 755 "${uninstall_rm_file}"

    for afile in ${symlinkfilelist}
    do
        opt_prefix="/opt/salt"
        symlinkfilelist_target=$(ls -l "${afile}" | cut -d '>' -f 2 | awk -F"opt" '{print $2}' | sed "s/^\/freeware//")
        if test -z "${symlinkfilelist_target}"; then
          opt_prefix=
          symlinkfilelist_target=$(ls -l "${afile}" | cut -d '>' -f 2)
        fi
        absdir=$( dirname  ${afile} | sed 's/^\.//')
        absfile=$( echo ${afile} | sed 's/^\.//')

        echo "mkdir -p ${absdir}" >> "${post_install_file}"
        echo "cd ${absdir}" >> "${post_install_file}"
        if test ! -z "${symlinkfilelist_target}"; then
          echo "ln -f -s "${opt_prefix}${symlinkfilelist_target}" ${absfile}" >> "${post_install_file}"
        fi
        echo "rm -f ${absfile}" >> ${uninstall_rm_file}
    done
}


_remove_symlinkd_files() {
    for afile in ${symlinkfilelist}
    do
        ## _display "removing symbolic file '${afile}'"
        rm -f "${afile}"
    done
}


# this find/grep will have to be modified for running on AIX
_gen_list_of_root_files() {
    root_filelist=$(find . -type f | grep -v '^\./usr' | sed 's/^\.//')
}


# this find/grep will have to be modified for running on AIX
_gen_list_of_usr_files() {
    usr_filelist=$(find . -type f | grep '^\./usr' | sed 's/^\.//')
}


_gen_installp_template() {
    cat <<@EOF >"${INSTALLP_TEMPLATE}"
Package Name: ${SSE_NAME}
Package VRMF: ${SSE_VERSION}
Update: N
Fileset
  Fileset Name: ${SSE_NAME}.rte
  Fileset VRMF: ${SSE_VERSION}
  Fileset Description: SaltStack Enterprise for AIX
  USRLIBLPPFiles
  EOUSRLIBLPPFiles
  ROOTLIBLPPFiles
  Post-installation Script: ${post_install_file}
  Pre_rm Script: ${uninstall_rm_file}
  EOROOTLIBLPPFiles
  Bosboot required: N
  License agreement acceptance required: N
  Include license files in this package: N
  Requisites: 
  Upsize: / 800000; /usr 100; 
  USRFiles
@EOF

    for idx in ${usr_filelist}
    do
        echo "    ${idx}" >>"${INSTALLP_TEMPLATE}"
    done

    cat <<@EOF >>"${INSTALLP_TEMPLATE}"
  EOUSRFiles
  ROOT Part: Y
  ROOTFiles
@EOF

    for idx in ${root_filelist}
    do
        echo "    ${idx}" >>"${INSTALLP_TEMPLATE}"
    done

    cat <<@EOF >>"${INSTALLP_TEMPLATE}"
  EOROOTFiles
  Relocatable: N
EOFileset
@EOF

}

#################################### MAIN ####################################

# static definitions

log_file_format="${HOME}/gen_inst_template.%Y%m%d%H%M%S.log"
log_file="`date \"+${log_file_format}\"`"

base_dir="${HOME}/prep_rte_area"

wrkdir="${base_dir}"

if test ! -d  "${base_dir}"; then
  mkdir -p "${base_dir}"
fi

if test ! -d  "${wrkdir}"; then
  mkdir -p "${wrkdir}"
fi

SSE_NAME="salt-enterprise"
SSE_VERSION="3.2.0.5"
INSTALLP_TEMPLATE="${base_dir}/${SSE_NAME}.template"

post_install_file="${wrkdir}/opt/salt/bin/sse_postinstall_i"
uninstall_rm_file="${wrkdir}/opt/salt/bin/sse_pre_rm"

# global vars
initialldir=
root_filelist=
usr_filelist=

#script main body

initialdir=$(pwd)
cd "$wrkdir"

# generate post install and removal cleanup scripts
# which handle symlink issues
_get_list_of_sym_linked_files
_gen_post_install_remove_scripts
_remove_symlinkd_files

# now  create template as syymlink'd files removed
_gen_list_of_root_files
_gen_list_of_usr_files
_gen_installp_template

